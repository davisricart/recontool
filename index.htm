<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Compare Excel Files</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        h1 { color: #333; }
        button { padding: 10px; background: #007BFF; color: white; border: none; cursor: pointer; margin-right: 10px; }
        button:hover { background: #0056b3; }
        input { margin: 10px 0; padding: 5px; width: 100%; max-width: 300px; }
        #downloadArea { margin-top: 20px; display: none; }
        #previewArea { margin-top: 20px; display: none; }
        table { border-collapse: collapse; width: 100%; margin-top: 15px; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        tr:nth-child(even) { background-color: #f9f9f9; }
        .drop-area {
            border: 2px dashed #ccc;
            border-radius: 5px;
            padding: 20px;
            text-align: center;
            margin: 10px 0;
            max-width: 300px;
            transition: all 0.3s ease;
        }
        .drop-area.highlight {
            border-color: #007BFF;
            background-color: rgba(0, 123, 255, 0.1);
        }
        .file-info {
            font-size: 0.9em;
            margin-top: 5px;
            color: #555;
        }
        #status { color: red; font-weight: bold; }
    </style>
</head>
<body>
    <h1>Compare Excel Files</h1>
    <form id="uploadForm">
        <div>
            <label for="file1">Upload First File:</label>
            <input type="file" id="file1" accept=".xlsx"><br>
            <div class="drop-area" id="dropArea1">
                <p>Drag & drop your first Excel file here</p>
            </div>
        </div>
        <div>
            <label for="file2">Upload Second File:</label>
            <input type="file" id="file2" accept=".xlsx"><br>
            <div class="drop-area" id="dropArea2">
                <p>Drag & drop your second Excel file here</p>
            </div>
        </div>

        <label for="scriptName">Enter Code:</label>
        <input type="text" id="scriptName" placeholder="Enter script code name" required><br>

        <button type="button" id="compareButton">Run Code</button>
        <button type="button" id="downloadButton" style="display: none;">Download Results</button><br>
        <p id="status"></p>
    </form>

    <div id="previewArea">
        <h3>Comparison Results</h3>
        <table id="previewTable"></table>
    </div>

    <script>
        const REPO_OWNER = 'your-github-username';
        const REPO_NAME = 'your-repo-name';
        const SCRIPT_PATH = 'scripts';

        async function fetchComparisonScript(scriptName) {
            const formattedScriptName = `${scriptName}.js`;
            const url = `https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/contents/${SCRIPT_PATH}/${formattedScriptName}`;

            try {
                const response = await fetch(url);
                if (!response.ok) {
                    throw new Error('Code not found, please try again. If the error continues please contact us');
                }
                const data = await response.json();
                const decodedContent = atob(data.content);
                return decodedContent;
            } catch (error) {
                throw error;
            }
        }

        function readExcelFile(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = (e) => resolve(e.target.result);
                reader.onerror = (e) => reject(e);
                reader.readAsArrayBuffer(file);
            });
        }

        async function compareFiles() {
            const file1 = document.getElementById('file1').files[0];
            const file2 = document.getElementById('file2').files[0];
            const scriptName = document.getElementById('scriptName').value.trim();
            const status = document.getElementById('status');
            const previewTable = document.getElementById('previewTable');
            const previewArea = document.getElementById('previewArea');
            const downloadButton = document.getElementById('downloadButton');

            status.textContent = '';
            previewTable.innerHTML = '';
            previewArea.style.display = 'none';
            downloadButton.style.display = 'none';

            if (!file1 || !file2) {
                status.textContent = 'Please upload both files.';
                return;
            }
            if (!scriptName) {
                status.textContent = 'Please enter a script code.';
                return;
            }

            try {
                status.textContent = 'Fetching script...';
                const scriptContent = await fetchComparisonScript(scriptName);
                const CompareFunction = new Function('XLSX', 'workbook1', 'workbook2', scriptContent);

                status.textContent = 'Reading files...';
                const content1 = await readExcelFile(file1);
                const content2 = await readExcelFile(file2);

                const workbook1 = XLSX.read(content1, { type: 'array' });
                const workbook2 = XLSX.read(content2, { type: 'array' });

                status.textContent = 'Comparing files...';
                const result = CompareFunction(XLSX, workbook1, workbook2);

                result.forEach((row, rowIndex) => {
                    const tr = document.createElement('tr');
                    row.forEach(cell => {
                        const td = document.createElement(rowIndex === 0 ? 'th' : 'td');
                        td.textContent = cell || '';
                        tr.appendChild(td);
                    });
                    previewTable.appendChild(tr);
                });

                previewArea.style.display = 'block';
                downloadButton.style.display = 'inline-block';
                downloadButton.onclick = () => downloadResults(result);

                status.textContent = 'Comparison complete!';
            } catch (error) {
                status.textContent = error.message;
            }
        }

        function downloadResults(results) {
            const workbook = XLSX.utils.book_new();
            const worksheet = XLSX.utils.aoa_to_sheet(results);
            XLSX.utils.book_append_sheet(workbook, worksheet, 'Results');
            XLSX.writeFile(workbook, 'Comparison_Results.xlsx');
        }

        document.getElementById('compareButton').addEventListener('click', compareFiles);
    </script>
</body>
</html>
